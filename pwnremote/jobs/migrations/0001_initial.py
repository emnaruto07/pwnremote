# Generated by Django 3.2.10 on 2021-12-28 22:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_twitter', models.CharField(blank=True, default='', max_length=15)),
                ('company_email', models.EmailField(max_length=254)),
                ('invoice_email', models.EmailField(max_length=254)),
                ('invoice_address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='emailList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_name', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('send_time', models.CharField(choices=[('daily', 'daily'), ('weekly', 'weekly')], default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('answer', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Company_name', models.CharField(max_length=50)),
                ('Position', models.CharField(max_length=100)),
                ('Employment_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Contract', 'Contract'), ('Temporary', 'Temporary'), ('Internship', 'Internship')], max_length=30)),
                ('Primary_Skills', models.CharField(choices=[('Web-Security', 'Web-Security'), ('Researcher', 'Researcher'), ('SOC/SIEM', 'SOC/SIEM'), ('VA/PT', 'VA/PT'), ('Quality Assurance', 'Quality Assurance'), ('Consulting', 'Consulting'), ('Forensics/IR', 'Forensics/IR'), ('Mobile Security', 'Mobile Security'), ('Cloud Security', 'Cloud Security'), ('Infrastructure Security', 'Infrastructure Security'), ('Code Source Review', 'Code Source Review'), ('Hardware/IOT', 'Hardware/IOT'), ('DevOps/DevSecOps', 'DevOps/DevSecOps'), ('Sales/Marketing', 'Sales/Marketing')], max_length=30)),
                ('Skills_tag', models.CharField(max_length=100)),
                ('Location', models.CharField(max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('available', models.BooleanField(default=True)),
                ('Min_salary', models.PositiveIntegerField()),
                ('max_salary', models.PositiveIntegerField()),
                ('Description', models.TextField()),
                ('url', models.URLField()),
                ('email', models.EmailField(max_length=254)),
                ('show_logo', models.BooleanField(default=True)),
                ('Highlight', models.BooleanField(default=False)),
                ('sticky_day', models.BooleanField(default=False)),
                ('sticky_week', models.BooleanField(default=False)),
                ('sticky_month', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
